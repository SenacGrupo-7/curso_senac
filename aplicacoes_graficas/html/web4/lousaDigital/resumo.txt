### Explica√ß√£o do C√≥digo

O c√≥digo apresentado implementa uma **lousa digital interativa**, onde os usu√°rios podem desenhar livremente na tela e escolher cores e espessuras diferentes para os tra√ßos.

---

## **1. HTML (`index.html`)**
A estrutura HTML define a interface da lousa digital.

### **Cabe√ßalho (`<head>`)**
- Define a codifica√ß√£o (`UTF-8`).
- Configura o **responsivo** para dispositivos m√≥veis (`viewport`).
- Define o t√≠tulo da p√°gina: `"Lousa Digital"`.
- Importa o **arquivo CSS** (`lousaDigital.css`) para estiliza√ß√£o.
- Importa o **arquivo JavaScript** (`scriptLousa.js`), com `defer`, garantindo que o script ser√° carregado ap√≥s o HTML.

### **Corpo (`<body>`)**
- **T√≠tulo:** `<h1>Lousa Digital` exibe o nome da aplica√ß√£o.
- **Barra de ferramentas (`#toolbar`)**:
  - Cont√©m bot√µes de funcionalidade:
    - Borracha (`#erase`)
    - Cores (`#red`, `#yellow`, `#blue`, `#white`)
    - Espessura do tra√ßo (`#line1`, `#line5`, `#line10`)
  - √çcones SVG s√£o utilizados para os bot√µes.
- **√Årea de desenho (`<canvas id="canvas">`)**:
  - O `canvas` √© onde os desenhos s√£o feitos.

---

## **2. CSS (`lousaDigital.css`)**
Define o **estilo visual** da p√°gina.

### **Configura√ß√£o Global (`*`)**
- Remove margens e preenchimentos (`margin: 0; padding: 0`).
- Habilita o `box-sizing: border-box;` para evitar problemas de dimensionamento.

### **Estiliza√ß√£o do corpo (`body`)**
- Define **cor de fundo** `#242424` (cinza escuro).
- Define **altura e largura** `100vh` (tela cheia).

### **Estiliza√ß√£o da `toolbar`**
- Cor de fundo escura (`#262626`).
- `display: flex;` alinha os bot√µes horizontalmente.
- `cursor: pointer;` nos bot√µes para indicar interatividade.
- `hover` muda a cor ao passar o mouse.

### **Cores e Espessura**
- Os bot√µes de cor (`#red`, `#yellow`, `#blue`, `#white`) s√£o estilizados para refletir suas respectivas cores.
- `#line5` e `#line10` aumentam a **espessura do tra√ßo** (`stroke-width`).

---

## **3. JavaScript (`scriptLousa.js`)**
Implementa a l√≥gica para desenhar no `canvas`.

### **1. Configura√ß√£o do `canvas`**
```js
const canvas = document.querySelector("#canvas")
const ctx = canvas.getContext("2d")
```
- Obt√©m a refer√™ncia do `canvas` e o **contexto 2D** para desenhar.

```js
canvas.height = window.innerHeight
canvas.width = window.innerWidth
```
- Define a altura/largura do `canvas` como a **tela inteira**.

```js
ctx.strokeStyle = "white"
```
- Define a cor inicial do tra√ßo como **branca**.

---

### **2. Captura de eventos do mouse**
```js
let painting = false;

canvas.addEventListener('mousedown', () => painting = true)
canvas.addEventListener('mouseup', () => {
    painting = false
    ctx.beginPath()
})
```
- Quando o usu√°rio **pressiona o mouse (`mousedown`)**, inicia o desenho.
- Quando **solta (`mouseup`)**, para de desenhar e reinicia o caminho (`ctx.beginPath()`).

```js
canvas.addEventListener('mousemove', (e) => {
    if (!painting) return
    ctx.lineTo(e.clientX, e.clientY)
    ctx.stroke()
    ctx.beginPath()
    ctx.moveTo(e.clientX, e.clientY)
    ctx.closePath()
})
```
- Quando o mouse **se move (`mousemove`)**, desenha a linha cont√≠nua.
- `ctx.lineTo(x, y)`: desenha at√© a posi√ß√£o do cursor.
- `ctx.stroke()`: exibe o tra√ßo.
- `ctx.beginPath() / moveTo(x, y)`: reinicia o caminho para evitar linhas desnecess√°rias.

---

### **3. Mudan√ßa de Cor**
```js
document.querySelector("#red").addEventListener('click', () => ctx.strokeStyle = "red")
document.querySelector("#yellow").addEventListener('click', () => ctx.strokeStyle = "yellow")
document.querySelector("#blue").addEventListener('click', () => ctx.strokeStyle = "blue")
document.querySelector("#white").addEventListener('click', () => ctx.strokeStyle = "white")
```
- Cada bot√£o altera a **cor do tra√ßo** quando clicado.

---

### **4. Mudan√ßa da Espessura do Tra√ßo**
```js
document.querySelector("#line1").addEventListener('click', () => ctx.lineWidth = 1)
document.querySelector("#line5").addEventListener('click', () => ctx.lineWidth = 5)
document.querySelector("#line10").addEventListener('click', () => ctx.lineWidth = 10)
```
- Altera a **espessura do tra√ßo** do desenho.

---

### **5. Borracha (Limpar a Tela)**
```js
document.querySelector("#erase").addEventListener('click', () => 
    ctx.clearRect(0, 0, canvas.width, canvas.height)
)
```
- Apaga tudo no `canvas`, limpando a lousa digital.

---

## **Conclus√£o**
Este c√≥digo cria uma **lousa digital interativa** com suporte a desenho livre, sele√ß√£o de cores, ajuste de espessura e borracha. üöÄ